/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.ExtendedClasses.NumericVerifier;
import Business.ExtendedClasses.WorkRequestHistory;
import Business.Organization.Organization;
import Business.Organization.ProcurementOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class SearchRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchRequestJPanel
     */
    private JPanel container;
    private Enterprise enterprise;
    public SearchRequestJPanel(JPanel container, Enterprise enterprise) {
        initComponents();
        this.container=container;
        this.enterprise=enterprise;
        addVerifiers();
    }
    private void addVerifiers() {
        InputVerifier integerVerifier = new NumericVerifier();
        requestIDJText.setInputVerifier(integerVerifier);   
    }

    private void populateworkRequestJTable(int RequestID, Organization organization) {
       
        boolean test =false;
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        if(organization!=null){
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList())
        {
            if(request.getWorkRequestId()==RequestID)
            {
                test = true;
            Object[] row = new Object[14];
            row[0] = request;
            row[1] = request.getMsgforFin();
            row[2] = request.getStatusforFin();
            row[3] = request.getStatus();
            row[4] = request.getSender();
            row[5] = request.getOrg();
            row[6] = request.getMachine();
            row[7] = request.getSensorStatusOld();
            row[8] = request.getRequestDate();
            row[9] = request.getProcuredDate();
            row[10] = request.getTotalPrice();
            model.addRow(row);
        }
            
        }
        }
    
        if(!test)
        {
            JOptionPane.showMessageDialog(this, "No request Found!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        requestIDJText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        ViewHistoryJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequestHistory = new javax.swing.JTable();
        backjButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 153));
        setPreferredSize(new java.awt.Dimension(1000, 700));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Request Id");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Requester Message", "Proc Message", "Proc Status", "Request Status", "Requeste", "Requeste Organization", "Machine Name", "Machine Status", "Requested Date", "Procured Date", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        ViewHistoryJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ViewHistoryJButton.setText("View History");
        ViewHistoryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewHistoryJButtonActionPerformed(evt);
            }
        });

        tblRequestHistory.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblRequestHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Owner", "Owner Organization", "Assigned Date", "Completed Date", "Owner Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRequestHistory);

        backjButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel1)
                        .addGap(61, 61, 61)
                        .addComponent(requestIDJText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(ViewHistoryJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(requestIDJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addGap(65, 65, 65)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewHistoryJButton)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(backjButton1)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String  s= requestIDJText.getText();
        if(requestIDJText.getText().equalsIgnoreCase("") || requestIDJText.getText().equalsIgnoreCase(null))
        {
         JOptionPane.showMessageDialog(null, "Request Id Can not be blank");
        }
        else{
        Organization organization = null;
        //System.out.println(enterprise.getOrganizationDirectory().getOrganizationList().size());
        for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if (org instanceof ProcurementOrganization){
                 organization=org;
                 //System.out.println(organization);
                 break;
            }
        } 
        int RequestID = Integer.parseInt(s);
        populateworkRequestJTable(RequestID,organization);
        }
        requestIDJText.setText("");
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ViewHistoryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewHistoryJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow>=0)
        {
            WorkRequest request = (WorkRequest)(workRequestJTable.getValueAt(selectedRow,0));
        DefaultTableModel model = (DefaultTableModel) tblRequestHistory.getModel();
        model.setRowCount(0);
        for(WorkRequestHistory wrh : request.getWrh().getWorkRequestHisList())
               {
                   System.out.println(wrh.getAssignedDate()+"  "+ wrh.getConpletedDate()+" "+wrh.getReceiver()+" "+wrh.getReceiverOrganization());
                   
                   Object[] row = new Object[5];
            row[0] = wrh.getReceiver();
            row[1] = wrh.getReceiverOrganization();
            row[2] = wrh.getAssignedDate();
            row[3] = wrh.getConpletedDate();
            row[4] = wrh.getComment();
            model.addRow(row);
               }
        
    }
        

        else
        {
         JOptionPane.showMessageDialog(this, "Kindly select Any Row!!", "Error", JOptionPane.ERROR_MESSAGE);   
        }
        

    }//GEN-LAST:event_ViewHistoryJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ViewHistoryJButton;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField requestIDJText;
    private javax.swing.JTable tblRequestHistory;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
