/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Servicing;

import Business.Enterprise.Enterprise;
import Business.ExtendedClasses.ProcurementProduct;
import Business.ExtendedClasses.StringVerifier;
import Business.ExtendedClasses.WorkRequestHistory;
import Business.Organization.Organization;
import Business.Organization.ProcurementOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ServicingProcessRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ServicingProcessRequestJPanel
     */
    private WorkRequest request;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Organization organization;
    public ServicingProcessRequestJPanel(JPanel userProcessContainer,Enterprise enterprise,Organization organization,WorkRequest request) {
        initComponents();
        this.request = request;
        this.organization = organization;
        this.userProcessContainer =userProcessContainer;
        this.enterprise =enterprise;
        addVerifiers();
        PopulateTable();
    }
    private void addVerifiers() {
        InputVerifier stringVerifier = new StringVerifier();
        TextFieldFinMessage.setInputVerifier(stringVerifier);
        
        
                        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        TextFieldFinMessage = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        backJButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboSensorValue = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        productCatalogtbl = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(0, 204, 153));
        setMaximumSize(new java.awt.Dimension(1000, 600));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Message to Department");

        TextFieldFinMessage.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TextFieldFinMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldFinMessageActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backJButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Sensor Value");

        comboSensorValue.setEditable(true);
        comboSensorValue.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        comboSensorValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Working Fine" }));
        comboSensorValue.setEnabled(false);
        comboSensorValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSensorValueActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Request Status");

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Serviced" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        productCatalogtbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        productCatalogtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productCatalogtbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(backJButton2))
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboSensorValue, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1)
                            .addComponent(TextFieldFinMessage)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(348, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextFieldFinMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboSensorValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton2)
                    .addComponent(jButton1))
                .addGap(88, 88, 88))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldFinMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldFinMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldFinMessageActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       // String price = TextFieldTotalPrice.getText();
        int selectedRow = productCatalogtbl.getSelectedRow();
        if(selectedRow>=0)
        {
            
        ProcurementProduct product = (ProcurementProduct)(productCatalogtbl.getValueAt(selectedRow,0));
        if(product.getProductAvail()>0)
        {
            product.setProductAvail(product.getProductAvail()-1);
            request.setTotalPrice(request.getTotalPrice()+product.getProductPrice());
            String messageforDept = TextFieldFinMessage.getText();
            request.setMsgforDept(messageforDept);
            request.getMachine().getSensorData().setSensorVlaue(comboSensorValue.getSelectedItem().toString());
            request.getMachine().setIsRequestSent(false);
            request.setStatus("Serviced");
            request.setResolveDate(new Date());
            request.setCurrentOwner(null);
            request.setCurrentOwnerOrganzation(null);
            for(WorkRequestHistory wrh :request.getWrh().getWorkRequestHisList())
        {
            if(wrh.getReceiverOrganization().equals(organization))
            {
                wrh.setConpletedDate(new Date());
                wrh.setComment(messageforDept);
            }
        }
            JOptionPane.showMessageDialog(null,"Work has been completed");
            userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ServicingViewAllRequest dwjp = (ServicingViewAllRequest) component;
        dwjp.populateworkRequestJTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Product is not available");
            
        }
        }else
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a product for Repair");
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ServicingViewAllRequest dwjp = (ServicingViewAllRequest) component;
        dwjp.populateworkRequestJTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void comboSensorValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSensorValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSensorValueActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String s = jComboBox1.getSelectedItem().toString();
        System.out.println(s+" T est");
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serviced"))
        {
            comboSensorValue.setSelectedItem("Working Fine");
        }
        else
        {
            comboSensorValue.setSelectedItem("");
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextFieldFinMessage;
    private javax.swing.JButton backJButton2;
    private javax.swing.JComboBox comboSensorValue;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productCatalogtbl;
    // End of variables declaration//GEN-END:variables

    private void PopulateTable() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                if (organization instanceof ProcurementOrganization){
                    org = organization;
                    break;
                }
            }
        
            if (org!=null){
        DefaultTableModel model = (DefaultTableModel)productCatalogtbl.getModel();
            model.setRowCount(0);
            for(ProcurementProduct p : org.getPpc().getProcurementProductList())
            {
            Object row[] = new Object[3];
            row[0] = p;
            row[1] = p.getProductPrice();
            row[2] = p.getProductAvail();
            model.addRow(row);

            }
            }
    }
}
